#!/usr/bin/env ruby
# vim: set ts=2 sw=2 tw=78 ft=ruby :#

require 'optparse'
require 'ostruct'
require 'fileutils'
require File.join(File.expand_path(File.dirname(__FILE__)), "..", "config/environment")
include Studio54::Config::Environment
load File.join(ROOTDIR, 'VERSION')

module Studio54

  class Options

    def self.parse(args)
      options = OpenStruct.new

      opts_saved = OptionParser.new do |opts|
        opts.banner = "Usage: studio54 [options]"
        opts.separator ""
        opts.separator "Specific options:"

        opts.on("-e", "--enter PROJECT_NAME", "Create studio54 project") do |name|
          options.enter = true
          options.project_name = name
        end

        opts.on_tail("-v", "--version", "Show Studio54 version") do
          puts VERSION * '.'
          exit
        end

        opts.on_tail("-h", "--help", "Show this message") do
          puts opts
          exit
        end
      end

      opts_saved.parse!(args)
      options
    end # end of Options::parse
  end # end of class

  options = Options.parse(ARGV)
  if options.enter
    newdir = File.join(File.expand_path('.'), options.project_name)
    FileUtils.mkdir newdir
    FileUtils.cp_r File.join(File.expand_path(File.dirname(__FILE__)),
                             '..') + '/bare/.', newdir
    FileUtils.mkdir_p File.join(newdir, 'app', 'models')
    FileUtils.mkdir   File.join(newdir, 'app', 'controllers')
    FileUtils.mkdir   File.join(newdir, 'rakelib')
    FileUtils.mkdir_p File.join(newdir, 'db', 'versions')
    FileUtils.mkdir_p File.join(newdir, 'rack', 'cache', 'body')
    FileUtils.mkdir   File.join(newdir, 'rack', 'cache', 'meta')
    if `ctags --version`
      Dir.chdir newdir do
        system "ctags -R ."
        puts "Installed ctags."
      end
    end
    puts "Done."
  end
end # end of module

